# 标准错误重定向到标准输出
2>&1


#
awk -v RS=';'  'END {print --NR}'
# -v 带参数，RS定义行分割符， NR是awk内置变量，Number of Records的缩写，表示当前记录条数（文件行数）；

awk 'NR==1{print $1}' file
# NR==1 定位在file的第一行   print $1 显示第一列内容

eg:json.tt =     "type": "machine_4000",
-F 以 正则表达式 为分割
(grep type json.tt | awk -F[\"] '{print $4}')

查找目录下包含内容的文件
grep -r "test"  /data/reports

上次开机时间：
date -d "$(awk -F. '{print $1}' /proc/uptime) second ago" +"%Y-%m-%d %H:%M:%S"

rpm查看信息：
rpm -qpi ****.rpm  | head


history 显示时间，ip
USER_IP=`who -u am i 2>/dev/null| awk '{print $NF}'|sed -e 's/[()]//g'`
export HISTTIMEFORMAT="%F %T <$USER_IP>:`whoami` "
# 只看时间
# export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S  "
history


# ps查看进程启动时间
ps -eo pid,lstart,etime,cmd | egrep tornadofs
ps -w w -eo cmd,lstart,command | grep glusterfsd


#  netstat
netstat -n | grep 2181| awk '/^tcp/ {++S[$NF]} END {for (a in S) print a, S[a]}'
netstat -ntlp
netstat -ntp
# 查看FIN, 断开连接
netstat -ano | grep 3306 | grep FIN


*文件包含
. filename   # 注意点号(.)和文件名中间有一空格
  或
source filename


top查看进程
top -p `pgrep 程序名 | xargs | tr " " ","`
top -p `pidof kdfs | xargs | tr " " ","`


pgrep haproxy | awk 'NR>=0&&NR<=20{print $0}'    # 前20行
top -p `pgrep haproxy | awk 'NR>=0&&NR<=20{print $0}' | xargs | tr " " ","`

# top 1秒刷新一次
top -d 1 >> top.log


# ps -ae --forest -o pid,lstart,cmd

traceroute 10.10.10.10


# 去掉字符中的颜色
new_str=$(echo $mystr | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g")

# find 按文件时间段
find ./log -type f -newermt "2022-02-28 01:00:00"  ! -newermt "2022-02-28 01:30:00" | xargs ls -al

# 时间戳转换成时间
timestamp=1680078601.628
date -d '1970-01-01 UTC 1680078601.628 seconds'

###Linux文件查看
  0）cat xx.txt
  1）diff   xx.txt xx.txt
  2）more / less
  将文件从第一行开始，根据输出窗口的大小，适当的输出文件内容
  more的语法：more 文件名
  Enter 向下n行，需要定义，默认为1行；
  Ctrl f 向下滚动一屏；
  空格键 向下滚动一屏；
  Ctrl b 返回上一屏；
  = 输出当前行的行号；
  :f 输出文件名和当前行的行号；
  v 调用vi编辑器；
  ! 命令 调用Shell，并执行命令；
  q 退出more
  3）head / tail
