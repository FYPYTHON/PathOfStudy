来源：https://blog.csdn.net/weixin_51214902/article/details/124007778
      https://blog.51cto.com/u_15848894/5800406
      https://blog.csdn.net/jayxujia123/article/details/124557086


mysql与redis数据一致问题:
先写缓存，再写数据库
先写数据库，再写缓存
先删缓存，再写数据库
先写数据库，再删缓存

1、加锁操作
问题解决：有别的线程来执行，必须等待锁的释放
全部操作，做了一个排队操作，100%不会出现错误
问题：效率低！！！！！
解决：分布式锁，性能低，没办法用，在并发场景下

2、Redisson读写锁 -- ReadWriteLock
读锁与读锁之间不互斥 ，可以并发执行
写锁与写锁会发生互斥，不可以并行
并发场景下，80%场景会发生读操作，20%会发生写操作
底层页实现了LUA脚本
适用于：读多写少的场景

3、先写数据库，再删缓存 -- 缓存刚好失效
a)缓存过期时间到了，自动失效。
b)请求f查询缓存，发缓存中没有数据，查询数据库的旧值，但由于网络原因卡顿了，没有来得及更新缓存。
c)请求e先写数据库，接着删除了缓存。
d)请求f更新旧值到缓存中

4、删除缓存失败 
   a)增加重试
   b)定时任务，删除失败的加入队列，定时在删
4、删除缓存失败 
   a)增加重试
   b)定时任务，删除失败的加入队列，定时在删
4、删除缓存失败 
   a)增加重试
   b)定时任务，删除失败的加入队列，定时在删
4、删除缓存失败 
   a)增加重试
   b)定时任务，删除失败的加入队列，定时在删



