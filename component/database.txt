# mysql设置账号只读

grant select on *.* to readonly@'%' identified by "readonly@0330";

# postgresql设置账号只读

grant select on all tables in schema public to auditdb;

# mysql禁止登陆
revoke all privileges,grant option from 'readonly'@'%';flush privileges;

# postgresql禁止登陆
alter user readonly nologin
# gaussdb
alter user readonly noopradmin


# 原子操作概述
近年来随着服务器上CPU核数的不断增加，无锁算法（Lock Free）越来越广泛的被应用于高并发的系统中。PostgreSQL 做为世界上最高级开源数据库也在9.5时引入了无锁算法。本文先介绍了无锁算法和原子操作在PostgreSQL中的具体实现， 再通过一个Patch来看一下在PostgreSQL中是如何利用它来解决实际的高并发问题的。

无锁算法是利用CPU的原子操作实现的数据结构和算法来解决原来只能用锁才能解决的并发控制问题。 众所周知，在一个并发系统中特别是高并发的场景下，锁的使用会影响系统性能。 这里的CPU的原子操作是不可中断的一个或者一系列操作, 也就是不会被线程调度机制打断的操作， 运行期间不会有任何的上下文切换。

参考：http://static.kancloud.cn/taobaomysql/monthly/213786


# sysbench
1、sysbench cpu基准测试
* 测试使用64位整数，测试计算素数直到某个最大值所需要的时间
* cat /proc/cpuinfo
* sysbench --test=cpu --cpu-max-prime=20000 run

2、sysbench 文件i/o基准测试
* 创建数据集
* sysbench --test=fileio --file-total-size=150G prepare
* seqwr:顺序写入 seqrewr:顺序重写 seqrd:顺序读取 rndrd:随机读取 rndwr:随机写入 rndrw:混合随机读/写

* eg: sysbench --test=fileio --file-total-size=150G --file-test-mode=rndrw --init-rng=on --max-time=300 --max-requests=0 run

* 运行清楚操作
* sysbench --test=fileio --file-total-size=150G cleanup

3、OLTP(联机事务处理过程) 测试mysql事务处理
* 生成超过百万行记录的表
* sysbench --test=oltp --oltp-table-size=1000000 --mysql-db=test --mysql-user=root prepare

* 8个并发线程 只读模式 测试60s
* sysbench --test=oltp --oltp-table-size=1000000 --mysql-db=test --mysql-user=root --max-time=60 --oltp-read-only=on --max-requests=0 --num-threads=8 run



# ---------------------------
PostgreSQL 15: stats collector进程优化掉了

https://blog.51cto.com/yanzongshuai/5653099


